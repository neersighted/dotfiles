#!/bin/sh

while [ "$#" -gt 0 ]; do
  case $1 in
    --input)
      op=yank
      shift
      ;;
    --output)
      op=put
      shift
      ;;
    --selection=*)
      selection=${1#*=}
      shift 1
      ;;
    --selection)
      echo "$1 requires an argument" >&2
      exit 1
      ;;
    --wait)
      wait=1
      shift
      ;;

    -i)
      op=yank
      shift
      ;;
    -o)
      op=put
      shift
      ;;
    -s)
      selection=${2:?missing value: $1}
      shift 2
      ;;
    -w)
      wait=1
      shift
      ;;

    -*)
      echo "unknown option: $1" >&2
      exit 1
      ;;
    *)
      echo "unrecognized argument: $1" >&2
      exit 1
      ;;
  esac
done

op=${op:-yank}
selection=${selection:-clipboard}

b64() {
  if command -v base64 >/dev/null; then
    if base64 --version >/dev/null 2>&1; then
      base64 -w0
    else
      base64
    fi
  elif command -v b64encode >/dev/null; then
    b64encode -r -
  else
    echo "unable to base64 encode data" >&2
    exit 1
  fi
}

yank() {
  # tmux (plus built-in OSC 52)
  if [ -n "$TMUX" ]; then
    exec tmux load-buffer -w -
  fi

  # Local, GUI-only systems (macOS/WSL)
  if [ -z "$SSH_CONNECTION" ]; then
    if [ "$(uname)" = 'Darwin' ]; then
      exec pbcopy
    elif [ -n "${WSLENV+x}" ]; then
      if command -v win32yank.exe >/dev/null; then
        exec win32yank.exe -i --crlf
      else
        exec sh -c 'tr "\n" "\r\n" | clip.exe'
      fi
    fi
  fi

  # X11 (Linux/BSD)
  if [ -n "$DISPLAY" ]; then
    if command -v xsel >/dev/null; then
      # detect original/conrad
      if xsel --version >/dev/null 2>&1; then
        exec xsel ${wait:+--nodetach} -i --"$selection"
      else
        exec xsel -c -s "$selection"
      fi
    elif command -v xclip >/dev/null; then
      exec xclip ${wait:+-quiet} -i -selection "$selection"
    fi
  fi

  # manual OSC 52
  payload=$(b64) # read payload from stdin and encode
  escape="\\033]52;c;${payload}\\033\\\\" # OSC 52 ; target ; b64 data ; ST
  # check that the command is not too big
  if [ "$(printf "%b" "$escape" | wc -c)" -gt 100000 ]; then
    echo "input data too long" >&2
    exit 1
  else
    printf "%b" "$escape" > "$(tty)"
    exit
  fi
}

paste() {
  # GUI-only systems (macOS/WSL)
  if [ -z "$SSH_CONNECTION" ]; then
    if [ "$(uname)" = 'Darwin' ]; then
      exec pbpaste
    elif [ -n "${WSLENV+x}" ]; then
      if command -v win32yank.exe >/dev/null; then
        exec win32yank.exe -o --lf
      else
        exec sh -c 'powershell.exe -Command Get-Clipboard | tr "\r\n" "\n"'
      fi
    fi
  fi

  # X11 (Linux/BSD)
  if [ -n "$DISPLAY" ]; then
    if command -v xsel >/dev/null; then
      # detect original/conrad
      if xsel --version >/dev/null 2>&1; then
        exec xsel -o --"$selection"
      else
        exec xsel -p -s "$selection"
      fi
    elif command -v xclip >/dev/null; then
      exec xclip -o -selection "$selection"
    fi
  fi

  # tmux
  if [ -n "$TMUX" ]; then
    exec tmux save-buffer -
  fi

  echo "could not find a method to read the clipboard" >&2
  exit 1
}

case $op in
  yank) yank ;;
  put) paste ;;
esac
