#
# Config
#

# Command
set -g default-command "$SHELL"

# TERM
set -g default-terminal 'screen-256color'
set -g terminal-overrides[0] 'xterm-256color:Tc' # 24bit color in xterm
set -g terminal-overrides[1] 'xterm-termite:Tc' # 24bit color in termite
set -g terminal-overrides[2] '*:Ss=\E[%p1%d q:Se=\E[2 q' # force cursor changing

# Terminal
set -g escape-time 0 # pass escape sequences instantly
set -g focus-events on # pass focus through
set -g set-titles on # set titles in the parent terminal
set -g set-titles-string '❐ #{session_name} #{window_index}-#{pane_index} ● #{window_name} > #{pane_title}'

# Windows Naming/Numbering
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g automatic-rename on
set -g automatic-rename-format '#{pane_current_command}'

# Input
set -g mouse on
set -g xterm-keys on # enable extended key sequences
set -g mode-keys vi # vi-style copy
set -g status-keys emacs # readline-style command line

# Interface
set -g aggressive-resize on # resize when unobserved
set -g monitor-activity on # monitor background activity
set -g visual-activity off # ...but don't send messages about it

# Messages/History
set -g history-limit 50000
set -g display-panes-time 1000
set -g display-time 1500

#
# Status Line
#

set -g status on
set -g status-interval 1

set -g status-position bottom
set -g status-justify left

set -g status-left-length 100
set -g status-right-length 100

set -g window-status-separator ' '

set -g status-left " #{session_name} #[#{status-style}] "
set -g status-right " %r "

set -g window-status-format " (#{window_index}) #{window_name} "
set -g window-status-current-format " [#{window_index}] #{window_name} "

#
# Binds
#

# Reset All
unbind -a
unbind -a -T copy-mode
unbind -a -T copy-mode-vi

# Prefix
set -g prefix C-z
bind C-z last-window
bind z send-prefix

# Prefix (Nested/Remote)
%if #{||:#{||:#{SSH_CLIENT},#{MOSH}},#{TMUX}}
set -g prefix C-x
bind C-x last-window
bind x send-prefix
%endif

# Configuration
bind : command-prompt
bind ? list-keys
bind C-r source ~/.tmux.conf

# Clear Screen
bind C-l send C-l

# Window Management
bind n new-window
bind m command-prompt -I '#{window_index}' "move-window -t '%%'"
bind M move-window
bind r command-prompt -I '#{window_name}' "rename-window '%%'"
bind j command-prompt "select-window -t ':%%'"
bind c choose-window
bind x kill-pane
bind , select-window -t :-
bind . select-window -t :+

# Window Manipulation
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind b break-pane
bind a split-window -h \; choose-window 'kill-pane ; join-pane -h -t %%'
bind A split-window -h \; choose-window 'kill-pane ; join-pane -h -s %%'
bind [ swap-pane -U
bind ] swap-pane -D
bind f resize-pane -Z
bind l next-layout
bind L rotate-window

# Session Management
bind N new-session
bind C choose-session
bind R command-prompt -I '#{session_name}' "rename-session '%%'"
bind X kill-session
bind Z suspend-client
bind < switch-client -p
bind > switch-client -n

# Navigation
bind t choose-tree
bind T display-panes

# Client Management
bind d detach-client
bind D choose-client

# Client Detection
set -g @pslist    'ps -o state= -o comm= -t'
set -g @navdetect "grep -qiE '^[^TXZ][s+]? (nvim|fzf)$'"

# Pane Movement
bind -n C-h if -b '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-h'  'select-pane -L'
bind -n C-j if -b '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-j'  'select-pane -D'
bind -n C-k if -b '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-k'  'select-pane -U'
bind -n C-l if -b '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-l'  'select-pane -R'
bind -n C-\ if -b '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-\\' 'select-pane -l'

# Resizing
bind -n C-Up    if -b '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-Up'    'resize-pane -U'
bind -n C-Down  if -b '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-Down'  'resize-pane -D'
bind -n C-Left  if -b '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-Left'  'resize-pane -L'
bind -n C-Right if -b '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-Right' 'resize-pane -R'

# Window Selection
bind 1   select-window -t :1
bind 2   select-window -t :2
bind 3   select-window -t :3
bind 4   select-window -t :4
bind 5   select-window -t :5
bind 6   select-window -t :6
bind 7   select-window -t :7
bind 8   select-window -t :8
bind 9   select-window -t :9
bind 0   select-window -t :10
bind F1  select-window -t :11
bind F2  select-window -t :12
bind F3  select-window -t :13
bind F4  select-window -t :14
bind F5  select-window -t :15
bind F6  select-window -t :16
bind F7  select-window -t :17
bind F8  select-window -t :18
bind F9  select-window -t :19
bind F10 select-window -t :20

# URL Selection
bind o run 'tmuxrl #{pane_index} open'
bind O run 'tmuxrl #{pane_index} open full'
bind y run 'tmuxrl #{pane_index} yank'
bind Y run 'tmuxrl #{pane_index} yank full'

# Copy Mode
bind escape              copy-mode
bind -T copy-mode escape send -X cancel
bind -T copy-mode-vi q   send -X cancel
bind -T copy-mode-vi C-c send -X cancel

# Search
bind /                 copy-mode\; send /
bind ?                 copy-mode\; send ?
bind -T copy-mode-vi / command-prompt -p '/' 'send -X search-forward "%%%"'
bind -T copy-mode-vi ? command-prompt -p '?' 'send -X search-backward "%%%"'
bind -T copy-mode-vi n send -X search-again
bind -T copy-mode-vi N send -X search-reverse

# Macro Scroll
bind -T copy-mode-vi C-e   send -X scroll-down
bind -T copy-mode-vi C-y   send -X scroll-up
bind -T copy-mode-vi C-d   send -X halfpage-down
bind -T copy-mode-vi C-u   send -X halfpage-up
bind -T copy-mode-vi NPage send -X page-down
bind -T copy-mode-vi PPage send -X page-up
bind -T copy-mode-vi C-f   send -X page-down
bind -T copy-mode-vi C-b   send -X page-up
bind -T copy-mode-vi g     send -X history-top
bind -T copy-mode-vi G     send -X history-bottom

# Macro Cursor
bind -T copy-mode-vi H send -X top-line
bind -T copy-mode-vi L send -X bottom-line
bind -T copy-mode-vi M send -X middle-line

# Micro Scroll/Cursor
bind -T copy-mode-vi J send -X scroll-down
bind -T copy-mode-vi K send -X scroll-up
bind -T copy-mode-vi h send -X cursor-left
bind -T copy-mode-vi j send -X cursor-down
bind -T copy-mode-vi k send -X cursor-up
bind -T copy-mode-vi l send -X cursor-right

# Select
bind -T copy-mode-vi v      send -X begin-selection
bind -T copy-mode-vi V      send -X select-line
bind -T copy-mode-vi C-v    send -X rectangle-toggle
bind -T copy-mode-vi escape send -X clear-selection

# Yank/Paste
bind p run 'yankee-paste | tmux load-buffer -; tmux paste-buffer'
bind P choose-buffer
bind k delete-buffer
bind K choose-buffer "delete-buffer -b '%%'"
bind B list-buffers
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'yankee-yank'
bind -T copy-mode-vi Y send -X copy-selection-and-cancel

# Motions
bind -T copy-mode-vi {   send -X previous-paragraph
bind -T copy-mode-vi }   send -X next-paragraph
bind -T copy-mode-vi 0   send -X start-of-line
bind -T copy-mode-vi '^' send -X back-to-indentation
bind -T copy-mode-vi '$' send -X end-of-line
bind -T copy-mode-vi b   send -X previous-word
bind -T copy-mode-vi B   send -X previous-space
bind -T copy-mode-vi w   send -X next-word
bind -T copy-mode-vi W   send -X next-space
bind -T copy-mode-vi e   send -X next-word-end
bind -T copy-mode-vi E   send -X next-space-end
bind -T copy-mode-vi o   send -X other-end

# Jump
bind -T copy-mode-vi f  command-prompt -1 -p '>>' 'send -X jump-forward "%%%"'
bind -T copy-mode-vi F  command-prompt -1 -p '<<' 'send -X jump-backward "%%%"'
bind -T copy-mode-vi t  command-prompt -1 -p '>'  'send -X jump-to-forward "%%%"'
bind -T copy-mode-vi T  command-prompt -1 -p '<'  'send -X jump-to-backward "%%%"'
bind -T copy-mode-vi \; send -X jump-again
bind -T copy-mode-vi ,  send -X jump-reverse

# Repeat
bind -T copy-mode-vi 1 command-prompt -N -I 1 -p '' 'send -N "%%%"'
bind -T copy-mode-vi 2 command-prompt -N -I 2 -p '' 'send -N "%%%"'
bind -T copy-mode-vi 3 command-prompt -N -I 3 -p '' 'send -N "%%%"'
bind -T copy-mode-vi 4 command-prompt -N -I 4 -p '' 'send -N "%%%"'
bind -T copy-mode-vi 5 command-prompt -N -I 5 -p '' 'send -N "%%%"'
bind -T copy-mode-vi 6 command-prompt -N -I 6 -p '' 'send -N "%%%"'
bind -T copy-mode-vi 7 command-prompt -N -I 7 -p '' 'send -N "%%%"'
bind -T copy-mode-vi 8 command-prompt -N -I 8 -p '' 'send -N "%%%"'
bind -T copy-mode-vi 9 command-prompt -N -I 9 -p '' 'send -N "%%%"'

# Goto
bind -T copy-mode-vi : command-prompt -p 'goto' 'send -X goto-line "%%%"'

# Mouse (Status)
bind -n MouseDown1Status select-window -t=
bind -n WheelDownStatus  next-window
bind -n WheelUpStatus    previous-window

# Mouse (Resize/Focus)
bind -n MouseDown1Pane              select-pane -t=\; send -M
bind -n MouseDown3Pane              if -Ft= '#{mouse_any_flag}' 'select-pane -t=; send -M' 'select-pane -mt='
bind -n MouseDrag1Border            resize-pane -M
bind -T copy-mode-vi MouseDown1Pane select-pane

# Mouse (Selection)
bind -n MouseDrag1Pane                if -Ft= '#{||:#{mouse_any_flag},#{pane_in_mode}}' 'send -M' 'select-pane; copy-mode -M'
bind -n DoubleClick1Pane              if -Ft= '#{||:#{mouse_any_flag},#{pane_in_mode}}' 'send -M' 'select-pane; copy-mode; send -X select-word'
bind -n TripleClick1Pane              if -Ft= '#{||:#{mouse_any_flag},#{pane_in_mode}}' 'send -M' 'select-pane; copy-mode; send -X select-line'
bind -T copy-mode-vi MouseDrag1Pane   select-pane\; send -X begin-selection
bind -T copy-mode-vi DoubleClick1Pane select-pane\; send -X select-word
bind -T copy-mode-vi TripleClick1Pane select-pane\; send -X select-line

# Mouse (Scroll)
bind -n WheelUpPane                if -Ft= '#{||:#{mouse_any_flag},#{pane_in_mode}}' 'send -M' 'copy-mode -et='
bind -T copy-mode-vi WheelUpPane   select-pane\; send -N5 -X scroll-up
bind -T copy-mode-vi WheelDownPane select-pane\; send -N5 -X scroll-down

#
# Colors
#

%if #{&&:#{!=:TERM,xterm},#{!=:TERM,linux}}
source $HOME/.tmux/solarized-truecolor.conf
%endif
%if #{||:#{==:TERM,xterm},#{==:TERM,linux}}
source $HOME/.tmux/solarized-ansi.conf
%endif

#
# Style
#

# Selection
set -gF mode-style 'reverse'

# Window
set -gF window-style 'bg=#{@color_base03}'
set -gF window-active-style '#{window-style}'

# Pane
set -gF pane-border-style 'fg=#{@color_base01},bg=#{@color_base03}'
set -gF pane-active-border-style '#{pane-border-style}'

# Messages
set -gF message-style 'fg=#{@color_base0},bg=#{@color_base02}'
set -gF message-command-style 'fg=#{@color_base0},bg=#{@color_base02}'

# Status Line
set -gF status-style 'bg=#{@color_base02}'
set -gF status-left-style 'fg=#{@color_base3},bg=#{@color_base01},bold'
set -gF status-right-style 'fg=#{@color_base3},bg=#{@color_base01}'
set -gF window-status-style 'fg=#{@color_base1},bg=default'
set -gF window-status-current-style 'fg=#{@color_base3},bg=#{@color_base00}'
set -gF window-status-last-style '#{window-status-style}'
set -gF window-status-activity-style 'bold'
set -gF window-status-bell-style 'reverse'

# Clock
set -g clock-mode-style 12
set -gF clock-mode-colour '#{@color_base00}'

# Display Panes (Identify)
set -gF display-panes-colour '#{@color_base00}'
set -gF display-panes-active-colour '#{@color_yellow}'

# vi:ft=tmux:
