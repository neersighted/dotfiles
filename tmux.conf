#
# Config
#

# Terminal
set -g default-command "$SHELL"
set -g default-terminal 'screen-256color'
set -g -a terminal-overrides ',xterm-256color:Tc' # 24bit color in xterm
set -g -a terminal-overrides ',xterm-termite:Tc' # 24bit color in termite
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q' # force cursor changing
set -g focus-events on # pass focus through
set -g escape-time 0 # pass escape sequences instantly

# Windows
set -g base-index 1
set -g renumber-windows on

# Input
set -g mouse on # enable mouse
set -g mode-keys vi # vi-style copy
set -g status-keys emacs # readline-style commands
set -g xterm-keys on # extended key sequences

# Titles
set -g automatic-rename on
set -g automatic-rename-format '#{pane_current_command}'
set -g set-titles on
set -g set-titles-string '[#{session_name}/#{window_index}/#{pane_index}] #{window_name} | #{pane_title}'

# Clock
set -g clock-mode-style 12
set -g clock-mode-colour colour12

# Interface
set -g aggressive-resize on # resize when unobserved
set -g history-limit 50000 # record more scrollback
set -g status-interval 1 # update status rapidly
set -g monitor-activity on # monitor background activity
set -g mode-style "reverse" # highlight by inverting colors

#
# Binds
#

unbind -a # reset all bindings

# Prefix
set -g prefix C-z
bind C-z last-window
bind z send-prefix

# Configuration
bind : command-prompt
bind ? list-keys
bind C-r source ~/.tmux.conf

# Clear Screen
bind C-l send C-l

# Window Management
bind n new-window
bind m command-prompt -I '#{window_index}' "move-window -t '%%'"
bind M move-window
bind r command-prompt -I '#{window_name}' "rename-window '%%'"
bind j command-prompt "select-window -t ':%%'"
bind c choose-window
bind x kill-pane
bind , select-window -t :-
bind . select-window -t :+

# Window Manipulation
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind b break-pane
bind a split-window -h \; choose-window 'kill-pane ; join-pane -h -t %%'
bind A split-window -h \; choose-window 'kill-pane ; join-pane -h -s %%'
bind [ swap-pane -U
bind ] swap-pane -D
bind f resize-pane -Z
bind l next-layout
bind L rotate-window

# Session Management
bind N new-session
bind C choose-session
bind R command-prompt -I '#{session_name}' "rename-session '%%'"
bind X kill-session
bind Z suspend-client
bind < switch-client -p
bind > switch-client -n

# Navigation
bind t choose-tree
bind T display-panes

# Client Management
bind d detach-client
bind D choose-client

# Client Detection
set -g @pslist 'ps -o state= -o comm= -t'
set -g @navdetect "grep -qiE '^[^TXZ][s+]? (nvim|fzf)$'"

# Pane Movement
bind -n C-h if '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-h'  'select-pane -L'
bind -n C-j if '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-j'  'select-pane -D'
bind -n C-k if '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-k'  'select-pane -U'
bind -n C-l if '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-l'  'select-pane -R'
bind -n C-\ if '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-\\' 'select-pane -l'

# Resizing
bind -n C-Up    if '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-Up'    'resize-pane -U'
bind -n C-Down  if '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-Down'  'resize-pane -D'
bind -n C-Left  if '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-Left'  'resize-pane -L'
bind -n C-Right if '#{@pslist} #{pane_tty} | #{@navdetect}' 'send C-Right' 'resize-pane -R'

# Window Selection
bind 1 select-window -t :1
bind 2 select-window -t :2
bind 3 select-window -t :3
bind 4 select-window -t :4
bind 5 select-window -t :5
bind 6 select-window -t :6
bind 7 select-window -t :7
bind 8 select-window -t :8
bind 9 select-window -t :9
bind 0 select-window -t :10
bind F1 select-window -t :11
bind F2 select-window -t :12
bind F3 select-window -t :13
bind F4 select-window -t :14
bind F5 select-window -t :15
bind F6 select-window -t :16
bind F7 select-window -t :17
bind F8 select-window -t :18
bind F9 select-window -t :19
bind F10 select-window -t :20

# Copy Mode
bind / copy-mode
bind escape copy-mode

# Copy/Paste
bind -T copy-mode-vi escape send -X cancel
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'yankee-yank'
bind -T copy-mode-vi Y send -X copy-selection
bind p run 'yankee-paste | tmux load-buffer -; tmux paste-buffer'
bind P choose-buffer
bind k delete-buffer
bind K choose-buffer "delete-buffer -b '%%'"
bind B list-buffers

# URL Selection
bind o run 'tmux split-window -p 33 tmuxrl #{pane_index} open'
bind O run 'tmux split-window -p 33 tmuxrl #{pane_index} open full'
bind y run 'tmux split-window -p 33 tmuxrl #{pane_index} copy'
bind Y run 'tmux split-window -p 33 tmuxrl #{pane_index} copy full'

# Mouse Selection/Resizing
bind -n MouseDown1Pane select-pane -t=\; send -M
bind -n MouseDrag1Border resize-pane -M
bind -n MouseDown1Status select-window -t=
bind -n WheelUpStatus previous-window
bind -n WheelDownStatus next-window

# Mouse Scroll
bind -n WheelUpPane if -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
  'send -Mt=' \
  'if -Ft= "#{alternate_on}" \
    "send -t= Up" \
    "copy-mode -et="'
bind -n WheelDownPane if -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
  'send -Mt=' \
  'if -Ft= "#{alternate_on}" \
    "send -t= Down" \
    "send -Mt="'

#
# Status Line
#

set -g status on
set -g status-position bottom
set -g status-justify left

set -g status-style "fg=colour14,bg=colour0"
set -g window-status-separator " "

set -g status-left-length 100
set -g status-left-style "fg=colour15,bg=colour10,bold"
set -g status-left " #{session_name} #[bg=colour0] "

set -g status-right-length 100
set -g status-right-style "fg=colour15,bg=colour10"
set -g status-right " %r "

set -g window-status-style "fg=colour14,bg=colour0"
set -g window-status-format " (#{window_index}) #{window_name} "

set -g window-status-current-style "fg=colour15,bg=colour11"
set -g window-status-current-format " [#{window_index}] #{window_name} "

set -g window-status-activity-style "bold"
set -g window-status-bell-style "reverse"

# vi:ft=tmux:
