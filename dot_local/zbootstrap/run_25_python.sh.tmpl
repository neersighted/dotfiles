#!/bin/sh

set -e

# shellcheck source=lib.sh
. "{{ .chezmoi.sourceDir }}/dot_local/zbootstrap/lib.sh"

section "Python"

important "Updating pyenv..."
git_sync https://github.com/pyenv/pyenv "$PYENV_ROOT"
git_sync https://github.com/pyenv/pyenv-virtualenv "$PYENV_ROOT/plugins/pyenv-virtualenv"

if ! $MAKE -C "$PYENV_ROOT/src" -q; then
  info "Building pyenv native extensions..."
  sh -c "cd '$PYENV_ROOT'; ./src/configure"
  $MAKE -C "$PYENV_ROOT/src"
fi

PYTHON_VERSION=$(pyenv install -l | selectversion)
if ! pyenv versions --bare | grep -Fxq "$PYTHON_VERSION"; then
  important "Installing Python $PYTHON_VERSION..."
  pyenv install -s "$PYTHON_VERSION"
  important "Activating Python $PYTHON_VERSION..."
  pyenv global "$PYTHON_VERSION"
fi

important "Updating Python packages..."
for python in $(pyenv versions --bare --skip-aliases); do
  OLDIFS=$IFS
  IFS="$(printf '%b_' '\t\n')"; IFS="${IFS%_}"
  for spec in $(PYENV_VERSION=$python pip list --outdated --format=json | jq -r '.[] | "\(.name) from \(.version) to \(.latest_version)"'); do
    info "Updating $spec (Python $python)..."
    PYENV_VERSION=$python python -m pip install -U "${spec%% *}"
  done
  IFS=$OLDIFS
done
pipx upgrade-all

pipx_install "black"
pipx_install "flake8"
pipx_install "mypy"
pipx_install "pip-run"
pipx_install "pip-tools"
pipx_install "poetry"
pipx_install "pylint"
pipx_install "dephell" "dephell[full]"
pipx_install "python-language-server" "python-language-server[all]"
pipx_install "twine"

# vi: ft=sh
