#!/bin/sh

set -e

# shellcheck source=lib.sh
. "{{ .chezmoi.sourceDir }}/dot_local/zbootstrap/lib.sh"

section "System Packages"

case $(uname) in
  Linux)
    PKGS="arch-packages.txt"
    WRAPPER_CMD="sh"
    INSTALL_CMD="yay -Sy --noconfirm"
    INSTALLED_CMD=$(pacman -Qq)
    UPDATE_CMD="yay -Syu --noconfirm"
    PROVIDES_CMD="yay -Fy"

    if uname -r | grep -Fq Microsoft; then
      USR="$USR wslu"
    fi
    ;;
  FreeBSD)
    PKGS="freebsd-ports.txt"
    WRAPPER_CMD="su root"
    INSTALL_CMD="synth install"
    INSTALL_FILTER="cut -d@ -f1"
    INSTALLED_CMD=$(pkg query '%o')
    UPDATE_CMD="synth upgrade-system"
    PROVIDES_CMD="pkg provides -u"
    ;;
  Darwin)
    PKGS="homebrew-formulae.txt"
    WRAPPER_CMD="sh"
    INSTALL_CMD="brew install"
    INSTALL_FILTER="sed 's#.*/##'"
    INSTALLED_CMD=$(brew ls -1)
    UPDATE_CMD="brew update; brew upgrade"
    ;;
  *)
    error "Unsupported operating system."
    ;;
esac

while IFS= read -r pkg; do
  if printf '%s\n' "$pkg" | grep -Eq '^#|^$'; then
    continue
  fi
  if [ -n "$INSTALL_FILTER" ]; then
    pkg=$(printf '%s' "$pkg" | eval "$INSTALL_FILTER")
  fi
  if ! printf '%s' "$INSTALLED_CMD" | grep -Fxq "$(printf '%s' "$pkg")"; then
    INSTALL="$INSTALL$pkg "
  fi
done <"{{ .chezmoi.sourceDir }}/dot_local/zbootstrap/$PKGS"

case $(uname) in
  Linux)
    # bootstrap yay
    if ! command -v yay >/dev/null; then
      (
        important "Bootstrapping yay..."

        YAY="${TMPDIR:-/tmp}/yay"
        trap 'rm -rf $YAY' EXIT

        git clone https://aur.archlinux.org/yay.git "$YAY"
        cd "$YAY"
        makepkg -si --noconfirm
      )
    fi

    # pass through language managers
    export GOENV_VERSION=system NODENV_VERSION=system PYENV_VERSION=system RBENV_VERSION=system
    ;;
  FreeBSD)
    important "Fetching latest ports and packages..."
    $WRAPPER_CMD -c "portsnap auto; pkg update"
    ;;
esac

if [ -n "$INSTALL" ]; then
  important "Installing system packages with ${INSTALL_CMD%% *}..."

  info "$INSTALL_CMD $INSTALL"
  $WRAPPER_CMD -c "$INSTALL_CMD $INSTALL"
fi

important "Updating system packages with ${UPDATE_CMD%% *}..."
$WRAPPER_CMD -c "$UPDATE_CMD"

case $(uname) in
  FreeBSD)
    if grep -Eq '^#PKG_ENABLE_PLUGINS' /usr/local/etc/pkg.conf; then
      important "Enabling pkg-provides..."
      $WRAPPER_CMD -c 'sed -e "/PKG_PLUGINS_DIR/s/^#//" -e "/PKG_ENABLE_PLUGINS/s/^#//" -e "s/#PLUGINS \[/PLUGINS [ provides ]/" -i "" /usr/local/etc/pkg.conf'
    fi
    ;;
  Darwin)
    if ! brew tap | grep -Fxq 'homebrew/command-not-found'; then
      important "Enabling command-not-found..."
      brew tap homebrew/command-not-found
    fi
    ;;
esac

if [ -n "$PROVIDES_CMD" ]; then
  important "Updating provides database..."
  $WRAPPER_CMD -c "$PROVIDES_CMD"
fi

# vi: ft=sh
