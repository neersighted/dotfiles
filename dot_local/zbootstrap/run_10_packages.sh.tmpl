#!/bin/sh

set -e

# shellcheck source=lib.sh
. "{{ .chezmoi.sourceDir }}/dot_local/zbootstrap/lib.sh"

section "System Packages"

# pass through language managers
export GOENV_VERSION=system
export NODENV_VERSION=system
export PYENV_VERSION=system
export RBENV_VERSION=system

case $(uname) in
Linux)
  BLD="autoconf automake bison ccache clang cmake fakeroot gcc make pkgconf"
  LIB="libyaml"
  USR="asciinema bat chezmoi ctags direnv diskus elinks exa fd fish fzf gdb git git-lfs glances gotop hexyl highlight htop httpie hub hyperfine icdiff jq lftp lsof  mosh mycli neofetch neovim perl-file-mimeinfo pgcli python-pipx ripgrep sd shellcheck socat stow task-spooler tealdeer thefuck tig tmux tokei unzip watchexec whois xdg-utils yarn"

  if ! command -v yay >/dev/null; then
    (
      YAY="${TMPDIR:-/tmp}/yay"
      trap 'rm -rf $YAY' EXIT

      git clone https://aur.archlinux.org/yay.git "$YAY"
      cd "$YAY"
      makepkg -si --noconfirm
    )
  fi

  WRAPPER="sh"
  INSTALL="yay -Sy --noconfirm"
  INSTALLED=$(pacman -Qq)
  UPGRADE="yay -Syu --noconfirm; yay -Fy"
  ;;
FreeBSD)
  BLD="automake ccache cmake gcc gmake groff pkgconf"
  LIB="libffi libyaml ncurses openssl readline sqlite3"
  USR="bash bat coreutils curl direnv exa elinks fd-find fish fzf gdb git git-lfs gnupg gotop hexyl highlight hs-ShellCheck htop hub hyperfine icdiff jq lftp mosh neofetch neovim p5-File-MimeInfo pinentry-curses pkg-provides py37-asciinema py37-glances py37-httpie py37-mycli py37-pipx py37-pgcli ripgrep sd socat stow tealdeer thefuck tig tmux tokei ts universal-ctags unzip whois xdg-utils yarn" # missing: chezmoi, watchexec

  if grep -Eq '^#PKG_ENABLE_PLUGINS' /usr/local/etc/pkg.conf; then
    su root -c 'sed -e "/PKG_PLUGINS_DIR/s/^#//" -e "/PKG_ENABLE_PLUGINS/s/^#//" -e "s/#PLUGINS \[/PLUGINS [ provides ]/" -i "" /usr/local/etc/pkg.conf'
  fi

  WRAPPER="su root"
  INSTALL="pkg install -y"
  INSTALLED=$(pkg query '%n')
  UPGRADE="pkg upgrade -y; pkg provides -u"
  ;;
Darwin)
  BLD="automake ccache cmake pkg-config"
  LIB="gmp gdbm libffi libyaml openssl readline"
  USR="asciinema bat twpayne/taps/chezmoi coreutils ctags curl direnv diskus exa fd fish fzf gdb git git-lfs glances gnupg cjbassi/gotop/gotop hexyl highlight htop httpie hub hyperfine icdiff jq lesspipe lftp mas mosh mycli neofetch neovim pgcli pinentry-mac pipx rename ripgrep sd shellcheck socat stow task-spooler tealdeer terminal-notifier thefuck tmux tokei trash unzip watchexec xz yarn"

  if ! brew tap | grep -Fxq 'homebrew/command-not-found'; then
    brew tap homebrew/command-not-found
  fi

  WRAPPER="sh"
  INSTALL="brew install"
  INSTALLED=$(brew ls -1)
  UPGRADE="brew upgrade"
  ;;
*)
  error "Unsupported operating system."
  ;;
esac
for pkg in $BLD $LIB $USR; do
  pkg=$(basename "$pkg")
  if ! echo "$INSTALLED" | grep -Fwq "$pkg"; then
    PKGS="${PKGS:+$PKGS }$pkg"
  fi
done

if [ -n "$PKGS" ]; then
  info "Installing system packages with ${INSTALL%% *}..."

  important "$INSTALL $PKGS"
  $WRAPPER -c "$INSTALL $PKGS"
fi

info "Upgrading system packages with ${UPGRADE%% *}..."
$WRAPPER -c "$UPGRADE"

# vi: ft=sh
