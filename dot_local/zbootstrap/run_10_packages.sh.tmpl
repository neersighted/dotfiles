#!/bin/sh

set -e

# shellcheck source=lib.sh
. "{{ .chezmoi.sourceDir }}/dot_local/zbootstrap/lib.sh"

section "System Packages"

# pass through language managers
export GOENV_VERSION=system NODENV_VERSION=system PYENV_VERSION=system RBENV_VERSION=system

case $(uname) in
  Linux)
    BLD="autoconf automake bison ccache clang cmake gcc make pkgconf"
    LIB="bzip2 gdbm libffi libyaml ncurses openssl readline sqlite xz zlib"
    USR="asciinema bat chezmoi ctags direnv diskus exa fd fish fzf gdb git git-lfs hexyl highlight htop httpie hyperfine icdiff jq lftp lsof mosh mycli neovim perl-file-mimeinfo pgcli ripgrep sd shellcheck socat tealdeer thefuck tig tmux tokei unzip watchexec whois xdg-utils" # missing: gdbgui

    WRAPPER="sh"
    INSTALL="yay -Sy --noconfirm"
    INSTALLED=$(pacman -Qq)
    UPDATE="yay -Syu --noconfirm"
    PROVIDES="yay -Fy"

    if uname -r | grep -Fq Microsoft; then
      USR="$USR wslu"
    fi
    ;;
  FreeBSD)
    BLD="devel/autoconf devel/automake devel/bison devel/ccache devel/cmake lang/gcc devel/gmake textproc/groff devel/pkgconf"
    LIB="databases/gdbm devel/libffi textproc/libyaml devel/ncurses security/openssl devel/readline databases/sqlite3"
    USR="shells/bash textproc/bat sysutils/coreutils ftp/curl sysutils/direnv sysutils/exa sysutils/fd shells/fish textproc/fzf devel/gdb@py38 devel/gdbgui@py38 devel/git devel/git-lfs misc/gnu-watch security/gnupg sysutils/hexyl textproc/highlight devel/hs-ShellCheck sysutils/htop benchmarks/hyperfine textproc/icdiff@py38 textproc/jq ftp/lftp net/mosh editors/neovim devel/p5-File-MimeInfo security/pinentry-curses ports-mgmt/pkg-provides textproc/py-asciinema@py38 www/py-httpie@py38 databases/py-mycli@py38 databases/py-pgcli@py38 textproc/ripgrep textproc/sd net/socat sysutils/tealdeer misc/thefuck devel/tig sysutils/tmux devel/tokei sysutils/ts devel/universal-ctags archivers/unzip net/whois devel/xdg-utils" # missing: chezmoi, diskus, watchexec

    WRAPPER="su root"
    INSTALL="synth install"
    INSTALLED=$(pkg query '%o')
    UPDATE="synth upgrade-system"
    PROVIDES="pkg provides -u"
    ;;
  Darwin)
    BLD="ccache cmake"
    LIB="openssl@1.1 readline xz"
    USR="asciinema bat twpayne/taps/chezmoi coreutils ctags direnv diskus exa fd fish fzf gdb python-gdbgui git git-lfs gnupg hexyl highlight htop httpie hyperfine icdiff jq lesspipe lftp mas mosh mycli neovim pgcli pinentry-mac rename ripgrep sd shellcheck socat tealdeer terminal-notifier thefuck tmux tokei trash watchexec"

    WRAPPER="sh"
    INSTALL="brew install"
    INSTALLED=$(brew ls -1)
    UPDATE="brew update; brew upgrade"
    ;;
  *)
    error "Unsupported operating system."
    ;;
esac
for pkg in $BLD $LIB $USR; do
  if ! printf '%s' "$INSTALLED" | grep -Fxq "$(printf '%s' "$pkg" | cut -d@ -f1)"; then
    PKGS="${PKGS:+$PKGS }$pkg"
  fi
done

case $(uname) in
  Linux)
    if ! command -v yay >/dev/null; then
      (
        YAY="${TMPDIR:-/tmp}/yay"
        trap 'rm -rf $YAY' EXIT

        git clone https://aur.archlinux.org/yay.git "$YAY"
        cd "$YAY"
        makepkg -si --noconfirm
      )
    fi
    ;;
  FreeBSD)
    important "Fetching latest ports and packages..."
    $WRAPPER -c "portsnap auto; pkg update"
    ;;
esac

if [ -n "$PKGS" ]; then
  important "Installing system packages with ${INSTALL%% *}..."

  info "$INSTALL $PKGS"
  $WRAPPER -c "$INSTALL $PKGS"
fi

important "Updating system packages with ${UPDATE%% *}..."
$WRAPPER -c "$UPDATE"

case $(uname) in
  FreeBSD)
    if grep -Eq '^#PKG_ENABLE_PLUGINS' /usr/local/etc/pkg.conf; then
      important "Enabling pkg-provides..."
      $WRAPPER -c 'sed -e "/PKG_PLUGINS_DIR/s/^#//" -e "/PKG_ENABLE_PLUGINS/s/^#//" -e "s/#PLUGINS \[/PLUGINS [ provides ]/" -i "" /usr/local/etc/pkg.conf'
    fi
    ;;
  Darwin)
    if ! brew tap | grep -Fxq 'homebrew/command-not-found'; then
      important "Enabling command-not-found..."
      brew tap homebrew/command-not-found
    fi
    ;;
esac

if [ -n "$PROVIDES" ]; then
  important "Updating provides database..."
  $WRAPPER -c "$PROVIDES"
fi

# vi: ft=sh
