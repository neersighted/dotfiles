#!/bin/sh

set -e

# shellcheck source=lib.sh
. "{{ .chezmoi.sourceDir }}/dot_local/share/bootstrap/lib.sh"

section "Python"

git_sync https://github.com/pyenv/pyenv "$PYENV_ROOT"
git_sync https://github.com/pyenv/pyenv-virtualenv "$PYENV_ROOT/plugins/pyenv-virtualenv"

(
  cd "$PYENV_ROOT" || exit 1
  src/configure
  make -C src
)

PYTHON_VERSION=$(pyenv install -l | selectversion)
PYENV_INSTALLED=$(pyenv versions --bare | grep -Fv /envs/ || true)

if ! echo "$PYENV_INSTALLED" | grep -Fxq "$PYTHON_VERSION"; then
  info "Installing Python $PYTHON_VERSION..."
  pyenv install -s "$PYTHON_VERSION"
  info "Activating Python $PYTHON_VERSION..."
  pyenv global "$PYTHON_VERSION"
fi

for python in $PYENV_INSTALLED; do
  for target in $(PYENV_VERSION=$python pip list --outdated --format=freeze | awk -F== '{print $1}'); do
    info "Updating $target ($python)..."
    PYENV_VERSION=$python python -m pip install -U "$target"
  done
done

if ! command -v pipx >/dev/null; then
  info "Installing pipx..."
  python -m pip install pipx-in-pipx
else
  if [ ! -e "$PIPX_HOME/venvs/pipx/bin/python" ]; then
    info "Repairing pipx install..."
    python -m venv --upgrade "$PIPX_HOME/venvs/pipx"
  fi
  info "Updating pipx packages..."
  pipx upgrade-all
fi

pipx_install "black"
pipx_install "flake8"
pipx_install "flit"
pipx_install "mypy"
pipx_install "pip-tools"
pipx_install "pipenv"
pipx_install "poetry"
pipx_install "pylint"
pipx_install "dephell" "dephell[full]"
pipx_install "python-language-server" "python-language-server[all]"
pipx_install "rwt"
pipx_install "twine"

# vi: ft=sh
