#!/bin/sh

set -e

# shellcheck source=lib.sh
. "{{ .chezmoi.sourceDir }}/dot_local/share/bootstrap/lib.sh"

section "System Packages"

case $(uname) in
  Linux)
    BLD="autoconf automake bison ccache clang cmake fakeroot gcc make pkgconf"
    LIB="libyaml"
    USR="asciinema bat chezmoi ctags direnv diskus elinks exa fd fish fzf gdb git git-lfs gotop hexyl highlight htop httpie hub hyperfine icdiff jq lftp perl-file-mimeinfo pkgfile mosh mycli neofetch neovim pgcli ripgrep sd shellcheck socat stow task-spooler thefuck tig tmux tokei unzip watchexec whois xdg-utils yarn"

    if ! command -v yay >/dev/null; then
      (
        YAY="${TMPDIR:-/tmp}/yay"
        trap 'rm -rf $YAY' EXIT

        git clone https://aur.archlinux.org/yay.git "$YAY"
        cd "$YAY"
        makepkg -si --noconfirm
      )
    fi

    WRAPPER="sh"
    INSTALL="yay -Sy --noconfirm"
    INSTALLED=$(pacman -Qq)
    ;;
  FreeBSD)
    BLD="automake ccache cmake gcc gmake pkgconf"
    LIB="libffi libyaml ncurses openssl readline sqlite3"
    USR="bash bat coreutils curl direnv exa elinks fd-find fish fzf gdb git git-lfs gnupg gotop hexyl highlight hs-ShellCheck htop hub hyperfine icdiff jq lftp mosh neofetch neovim p5-File-MimeInfo pinentry-curses python python2 python3 py27-httpie py36-asciinema py36-mycli py36-pgcli ripgrep sd socat stow thefuck tig tmux tokei ts universal-ctags unzip whois xdg-utils yarn" # missing: chezmoi, watchexec

    WRAPPER="su root"
    INSTALL="pkg install -y"
    INSTALLED=$(pkg query '%n')
    ;;
  Darwin)
    BLD="automake ccache cmake pkg-config"
    LIB="gmp gdbm libffi libyaml openssl readline"
    USR="asciinema bat twpayne/taps/chezmoi coreutils ctags curl direnv diskus exa fd fish fzf gdb git git-lfs gnupg cjbassi/gotop/gotop hexyl highlight htop httpie hub hyperfine icdiff jq lesspipe lftp mas mosh mycli neofetch neovim pgcli pinentry-mac rename ripgrep sd shellcheck socat stow task-spooler tealdeer terminal-notifier thefuck tmux tokei trash unzip watchexec xz yarn"

    if ! brew tap | grep -q 'homebrew/command-not-found'; then
      brew tap homebrew/command-not-found
    fi

    WRAPPER="sh"
    INSTALL="brew install"
    INSTALLED=$(brew ls -1)
    ;;
  *)
    error "Unsupported operating system."
    ;;
esac
for pkg in $BLD $LIB $USR; do
  pkg=$(basename "$pkg")
  if ! echo "$INSTALLED" | grep -Fwq "$pkg"; then
    PKGS="${PKGS:+$PKGS }$pkg"
  fi
done
if [ -n "$PKGS" ]; then
  info "Installing system packages with ${INSTALL%% *}..."

  export GOENV_VERSION=system
  export NODENV_VERSION=system
  export PYENV_VERSION=system
  export RBENV_VERSION=system

  important "$INSTALL $PKGS"
  $WRAPPER -c "$INSTALL $PKGS"
fi

# vi: ft=sh
