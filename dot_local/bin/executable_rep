#!/bin/sh

set -e

print() {
  # cyan
  printf '\033[0;34m%s\033[0m\n' "$@"
}

command=${1:-apply}
shift || true

CHEZMOI=${CHEZMOI:-chezmoi}
DOTFILES=${DOTFILES:-~/.local/share/chezmoi}
REPO=${REPO:-https://github.com/neersighted/dotfiles.git}

case $command in
  apply | update | sync)
    if [ ! "$INNER" ]; then
      if ! command -v "$CHEZMOI" >/dev/null; then
        print "Bootstrapping chezmoi..."
        curl -sSfL https://git.io/chezmoi | sed 's/openssl -dst //' | sh -s -- -b ~/.local/bin
        CHEZMOI=~/.local/bin/chezmoi
      fi

      print "Applying dotfiles with chezmoi..."
      if [ -d "$DOTFILES" ]; then
        if [ -z "$(git -C "$DOTFILES" status --untracked-files=no --porcelain)" ]; then
          $CHEZMOI update --remove
        else
          $CHEZMOI apply --remove
        fi
      else
        $CHEZMOI init --apply "$REPO"
      fi

      export INNER=1
      exec "$0" apply
    fi

    # shellcheck source=../share/replicator/_lib.sh
    . "${XDG_DATA_HOME:-~/.local/share}/replicator/_lib.sh"

    for script in "$XDG_DATA_HOME/replicator"/*; do
      case "$script" in */_lib.sh) continue ;; esac
      [ -x "$script" ] && "$script"
    done

    if [ "$(dirname $CHEZMOI)" = "$HOME/.local/bin" ]; then
      # shellcheck disable=SC2230
      if [ "$(which -a chezmoi | wc -l)" -gt 1 ]; then
        rm $CHEZMOI
      else
        print "Self-updating chezmoi..."
        $CHEZMOI upgrade
      fi
    fi
    ;;
  commit)
    git -C "$DOTFILES" commit --interactive
    ;;
  diff)
    $CHEZMOI diff
    ;;
  push | pull)
    git -C "$DOTFILES" "$command" "$@"
    ;;
  shfmt)
    for script in $(shfmt -f "$DOTFILES"); do
      shfmt -p -i 2 -bn -ci -s -w "$script"
    done
    ;;
  status)
    git -C "$DOTFILES" status
    $CHEZMOI diff
    ;;
  *)
    printf 'unknown command: %s' "$command"
    ;;
esac
