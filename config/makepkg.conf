#
# Backend
#

# Download utilities.
DLAGENTS=('ftp::/usr/bin/curl -fC - --ftp-pasv --retry 3 --retry-delay 3 -o %o %u'
          'http::/usr/bin/curl -fLC - --retry 3 --retry-delay 3 -o %o %u'
          'https::/usr/bin/curl -fLC - --retry 3 --retry-delay 3 -o %o %u'
          'rsync::/usr/bin/rsync --no-motd -z %u %o'
          'scp::/usr/bin/scp -C %u %o')
VCSCLIENTS=('bzr::bzr'
            'git::git'
            'hg::mercurial'
            'svn::subversion')

# Compression utilities.
COMPRESSGZ=(pigz -c -f -n)
COMPRESSBZ2=(bzip2 -c -f)
COMPRESSXZ=(xz -c -z - --threads=0)
COMPRESSLRZ=(lrzip -q)
COMPRESSLZO=(lzop -q)
COMPRESSZ=(compress -c -f)

# Checksum utilities.
INTEGRITY_CHECK=(sha256)

#
# Building
#

# Build options.
if [ -n "$DISTCC_HOSTS" ]; then
  BUILDENV=(distcc color ccache check sign)
else
  BUILDENV=(!distcc color ccache check sign)
fi

# Build for the right arch.
case "$(uname -m)" in
(i686)
  CARCH="i686"
  GCCARCH="i686"
  CHOST="i686-pc-linux-gnu"
;;
(x86_64)
  CARCH="x86_64"
  GCCARCH="x86-64"
  CHOST="x86_64-pc-linux-gnu"
;;
esac

# Make flags
if [ -n "$DISTCC_SLOTS" ]; then
  MAKEFLAGS="-j$DISTCC_SLOTS -l`nproc`"
else
  MAKEFLAGS="-j`nproc`"
fi

# Preprocessor flags.
CPPFLAGS="-D_FORTIFY_SOURCE=2"

# Compiler flags.
CFLAGS="-pipe -fstack-protector-strong -fPIE"
CXXFLAGS="-pipe -fstack-protector-strong -fPIE"
DEBUG_CFLAGS="-g -fvar-tracking-assignments -frecord-gcc-switches"
DEBUG_CXXFLAGS="-g -fvar-tracking-assignments -frecord-gcc-switches"
if [ -n "$DEBUG" ]; then
  CFLAGS="-O0 $CFLAGS"
  CXXFLAGS="-O0 $CXXFLAGS"
else
  CFLAGS="-O2 $CFLAGS"
  CXXFLAGS="-O2 $CXXFLAGS"
fi
if [ -n "$NATIVE" ]; then
  if [ -n "$DISTCC_HOSTS" ]; then
    CFLAGS="$(gcc-flags-native) $CFLAGS"
    CXXFLAGS="$(gcc-flags-native) $CXXFLAGS"
  else
    CFLAGS="-march=native $CFLAGS"
    CXXFLAGS="-march=native $CXXFLAGS"
  fi
else
  CFLAGS="-march=$GCCARCH $CFLAGS"
  CXXFLAGS="-march=$GCCARCH $CXXFLAGS"
fi

# Linker flags.
LDFLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now"

#
# Packaging
#

# Package options.
if [ -n "$DEBUG" ]; then
  OPTIONS=(!strip docs libtool staticlibs emptydirs zipman !purge !upx !optipng debug)
else
  OPTIONS=(strip docs libtool staticlibs emptydirs zipman purge !upx optipng !debug)
fi

# Strip as many symbols as possible.
STRIP_BINARIES="--strip-all"
STRIP_SHARED="--strip-unneeded"
STRIP_STATIC="--strip-debug"

# Process documentation files.
MAN_DIRS=({usr{,/local}{,/share},opt/*}/{man,info})
DOC_DIRS=(usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc})
# Purge extra files.
PURGE_TARGETS=(usr/{,share}/info/dir .packlist *.pod)

#
# Output
#

# Who built this?
PACKAGER="Bjorn Neergaard <bjorn@neersighted.com>"
GPGKEY="0x08AAA409549C0EC5"

# Output format.
PKGEXT=".pkg.tar.xz"
SRCEXT=".src.tar.gz"
