#
# Terminal
#

# Escape Sequences
set -g @esc_clipboard   'Ms=\033]52;%p1%s;%p2%s\033\\'
set -g @esc_cursorcolor 'Cs=\033]12;%p1%s\033\\:Cr=\033]112\033\\'
set -g @esc_cursorstyle 'Ss=\033[%p1%d q:Se=\033[2 q'

# terminfo Overrides
set -sF terminal-overrides[0] "xterm-*:RGB:XT:#{@esc_clipboard}:#{@esc_cursorcolor}:#{@esc_cursorstyle}"
set -sF terminal-overrides[1] "screen-*:RGB:XT:#{@esc_clipboard}:#{@esc_cursorcolor}:#{@esc_cursorstyle}"
set -sF terminal-overrides[2] "tmux-*:RGB:XT:#{@esc_clipboard}:#{@esc_cursorcolor}:#{@esc_cursorstyle}"

# Escape Sequences
set -s escape-time 0 # pass escape sequences instantly
set -s focus-events on # pass focus through
set -s set-clipboard on # pass OSC 52 escapes up the next nesting level

# $TERM
set -s default-terminal 'screen-256color'

# Terminal Naming
set -g set-titles on # set titles in the parent terminal
set -g set-titles-string '[#{session_name}] #{pane_title}'

# Windows Naming/Numbering
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g automatic-rename on
set -g automatic-rename-format '#{pane_current_command}'

# Input
set -g mouse on
set -g xterm-keys on # enable extended key sequences
set -g mode-keys vi # vi-style copy
set -g status-keys emacs # readline-style command line

# Activity
set -g monitor-activity on # monitor background activity
set -g visual-activity off # ...but don't send messages about it

# Messages/History
set -g history-limit 50000
set -g display-panes-time 1000
set -g display-time 4000

#
# Status Line
#

set -g status on
set -g status-interval 1

set -g status-position bottom
set -g status-justify left

set -g status-left-length 100
set -g status-right-length 100

set -g window-status-separator ' '

set -g status-left ' #{session_name} #[#{status-style}] '
set -g status-right ' %r '

set -g window-status-format ' (#{window_index}) #{window_name} '
set -g window-status-current-format ' [#{window_index}] #{window_name} '

#
# Keybinds
#

# Pane Process Detection
set -g @cmd_pslist       'ps -o state= -o comm= -t'
set -g @cmd_navdetect    'grep -Eiq "^[^TXZ][s+]? (nvim|fzf)$"'
set -g @cmd_scrolldetect 'grep -Eiq "^[^TXZ][s+]? (less|info)$"'

# Reset All
unbind -a
unbind -a -T copy-mode
unbind -a -T copy-mode-vi

# Prefix
set -g prefix C-Space
bind C-Space last-window
bind Space send-prefix

# Tmux
bind : command-prompt
bind '~' show-messages
bind Tab list-keys
bind C-r source "$XDG_CONFIG_HOME/tmux/tmux.conf"
bind t clock-mode

# Lifecycle
bind n new-window
bind N new-session
bind x kill-pane
bind X kill-window
bind d detach-client
bind D kill-session

# Server Navigation
bind j choose-tree
bind < switch-client -p
bind > switch-client -n

# Window Navigation
bind J display-panes
bind , select-window -t :-
bind . select-window -t :+
bind f command-prompt 'find-window -- "%%"'

# Indexing/Naming
bind m command-prompt  'swap-window -t "%%"'
bind M move-window
bind r command-prompt -I '#{window_name}' 'rename-window "%%"'
bind R command-prompt -I '#{session_name}' 'rename-session "%%"'

# Pane Manipulation
bind z resize-pane -Z
bind Z break-pane
bind s split-window -v -c '#{pane_current_path}'
bind S choose-tree 'join-pane -v -t "%%"'
bind v split-window -h -c '#{pane_current_path}'
bind V choose-tree 'join-pane -h -t "%%"'

# Pane Layout
bind [ swap-pane -U
bind ] swap-pane -D
bind \ rotate-window
bind M-1 select-layout even-horizontal
bind M-2 select-layout even-vertical
bind M-3 select-layout main-horizontal
bind M-4 select-layout main-vertical
bind M-5 select-layout tiled

# Pane Movement
bind -n C-h if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-h' 'select-pane -L'
bind -n C-j if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-j' 'select-pane -D'
bind -n C-k if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-k' 'select-pane -U'
bind -n C-l if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-l' 'select-pane -R'
bind -n C-\ if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-\' 'select-pane -l'
bind C-h send C-h
bind C-j send C-j
bind C-k send C-k
bind C-l send C-l \; run-shell 'sleep 0.1' \; refresh-client
bind C-\ send C-\

# Resizing
bind -n C-Up    if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-Up'    'resize-pane -U'
bind -n C-Down  if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-Down'  'resize-pane -D'
bind -n C-Left  if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-Left'  'resize-pane -L'
bind -n C-Right if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-Right' 'resize-pane -R'
bind C-Up send C-Up
bind C-Down send C-Down
bind C-Left send C-Left
bind C-Right send C-Right

# Nesting
bind -T root M-Up \
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \; \
  set prefix None \; \
  set key-table off \; \
  set status-left-style 'bg=default' \; \
  set status-right-style 'bg=default' \; \
  set window-status-current-style 'bg=default' \; \
  refresh-client -S
bind -T off M-Down \
  set -u prefix \; \
  set -u key-table \; \
  set -u status-left-style \; \
  set -u status-right-style \; \
  set -u window-status-current-style \; \
  refresh-client -S
bind M-Up send M-Up
bind M-Down send M-Down

# Window Selection
bind 1   select-window -t :1
bind 2   select-window -t :2
bind 3   select-window -t :3
bind 4   select-window -t :4
bind 5   select-window -t :5
bind 6   select-window -t :6
bind 7   select-window -t :7
bind 8   select-window -t :8
bind 9   select-window -t :9
bind 0   select-window -t :10
bind F1  select-window -t :11
bind F2  select-window -t :12
bind F3  select-window -t :13
bind F4  select-window -t :14
bind F5  select-window -t :15
bind F6  select-window -t :16
bind F7  select-window -t :17
bind F8  select-window -t :18
bind F9  select-window -t :19
bind F10 select-window -t :20

# URL Selection
bind o run 'tmuxrl -t #{pane_id} -o'
bind O run 'tmuxrl -t #{pane_id} -f -o'
bind y run 'tmuxrl -t #{pane_id}'
bind Y run 'tmuxrl -t #{pane_id} -f'

# Copy Mode
bind escape              copy-mode
bind k                   copy-mode \; send -X cursor-up
bind K                   copy-mode \; send -X scroll-up
bind -T copy-mode escape send -X cancel
bind -T copy-mode-vi q   send -X cancel
bind -T copy-mode-vi C-c send -X cancel

# Search
bind /                 copy-mode \; send /
bind ?                 copy-mode \; send ?
bind -T copy-mode-vi / command-prompt -p '/' 'send -X search-forward "%%"'
bind -T copy-mode-vi ? command-prompt -p '?' 'send -X search-backward "%%"'
bind -T copy-mode-vi n send -X search-again
bind -T copy-mode-vi N send -X search-reverse

# Macro Scroll
bind -T copy-mode-vi C-e   send -X scroll-down
bind -T copy-mode-vi C-y   send -X scroll-up
bind -T copy-mode-vi C-d   send -X halfpage-down
bind -T copy-mode-vi C-u   send -X halfpage-up
bind -T copy-mode-vi NPage send -X page-down
bind -T copy-mode-vi PPage send -X page-up
bind -T copy-mode-vi C-f   send -X page-down
bind -T copy-mode-vi C-b   send -X page-up
bind -T copy-mode-vi g     send -X history-top
bind -T copy-mode-vi G     send -X history-bottom

# Macro Cursor
bind -T copy-mode-vi H send -X top-line
bind -T copy-mode-vi L send -X bottom-line
bind -T copy-mode-vi M send -X middle-line

# Micro Scroll/Cursor
bind -T copy-mode-vi J send -X scroll-down
bind -T copy-mode-vi K send -X scroll-up
bind -T copy-mode-vi h send -X cursor-left
bind -T copy-mode-vi j send -X cursor-down
bind -T copy-mode-vi k send -X cursor-up
bind -T copy-mode-vi l send -X cursor-right

# Select
bind -T copy-mode-vi v      send -X begin-selection
bind -T copy-mode-vi V      send -X select-line
bind -T copy-mode-vi C-v    send -X rectangle-toggle
bind -T copy-mode-vi escape send -X clear-selection

# Yank/Paste
bind p paste-buffer -p
bind P run 'yankee -o | tmux load-buffer -; tmux paste-buffer -dp'
bind b choose-buffer
bind B choose-buffer 'run "tmux save-buffer -b "%%" - | yankee"'
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Y send -X copy-pipe-and-cancel 'yankee'

# Motions
bind -T copy-mode-vi {   send -X previous-paragraph
bind -T copy-mode-vi }   send -X next-paragraph
bind -T copy-mode-vi 0   send -X start-of-line
bind -T copy-mode-vi '^' send -X back-to-indentation
bind -T copy-mode-vi '$' send -X end-of-line
bind -T copy-mode-vi b   send -X previous-word
bind -T copy-mode-vi B   send -X previous-space
bind -T copy-mode-vi w   send -X next-word
bind -T copy-mode-vi W   send -X next-space
bind -T copy-mode-vi e   send -X next-word-end
bind -T copy-mode-vi E   send -X next-space-end
bind -T copy-mode-vi o   send -X other-end

# Jump
bind -T copy-mode-vi f  command-prompt -1 -p '>>' 'send -X jump-forward "%%"'
bind -T copy-mode-vi F  command-prompt -1 -p '<<' 'send -X jump-backward "%%"'
bind -T copy-mode-vi t  command-prompt -1 -p '>'  'send -X jump-to-forward "%%"'
bind -T copy-mode-vi T  command-prompt -1 -p '<'  'send -X jump-to-backward "%%"'
bind -T copy-mode-vi \; send -X jump-again
bind -T copy-mode-vi ,  send -X jump-reverse

# Repeat
bind -T copy-mode-vi 1 command-prompt -N -I 1 -p 'repeat' 'send -N "%%"'
bind -T copy-mode-vi 2 command-prompt -N -I 2 -p 'repeat' 'send -N "%%"'
bind -T copy-mode-vi 3 command-prompt -N -I 3 -p 'repeat' 'send -N "%%"'
bind -T copy-mode-vi 4 command-prompt -N -I 4 -p 'repeat' 'send -N "%%"'
bind -T copy-mode-vi 5 command-prompt -N -I 5 -p 'repeat' 'send -N "%%"'
bind -T copy-mode-vi 6 command-prompt -N -I 6 -p 'repeat' 'send -N "%%"'
bind -T copy-mode-vi 7 command-prompt -N -I 7 -p 'repeat' 'send -N "%%"'
bind -T copy-mode-vi 8 command-prompt -N -I 8 -p 'repeat' 'send -N "%%"'
bind -T copy-mode-vi 9 command-prompt -N -I 9 -p 'repeat' 'send -N "%%"'

# Goto
bind -T copy-mode-vi : command-prompt -p 'goto' 'send -X goto-line "%%"'

# Mouse (Status)
bind -n MouseDown1Status select-window -t=
bind -n WheelDownStatus  next-window
bind -n WheelUpStatus    previous-window

# Mouse (Resize/Focus)
bind -n MouseDown1Pane              select-pane \; send -M
bind -n MouseDrag1Border            resize-pane -M
bind -T copy-mode-vi MouseDown1Pane select-pane \; send 'y'

# Mouse (Selection)
bind -n MouseDrag1Pane                select-pane \; if -Ft= '#{||:#{mouse_any_flag},#{pane_in_mode}}}' 'send -M' 'copy-mode -M'
bind -n DoubleClick1Pane              select-pane \; if -Ft= '#{||:#{mouse_any_flag},#{pane_in_mode}}}' 'send -M' 'copy-mode; send -X select-word'
bind -n TripleClick1Pane              select-pane \; if -Ft= '#{||:#{mouse_any_flag},#{pane_in_mode}}}' 'send -M' 'copy-mode; send -X select-line'
bind -T copy-mode-vi MouseDrag1Pane   select-pane \; send -X begin-selection
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line

# Mouse (Scroll)
bind -n WheelUpPane                select-pane \; if -t= '#{?alternate_on,true,false} && #{@cmd_pslist} #{pane_tty} | #{@cmd_scrolldetect}' 'send -N3 Up' 'if -Ft= "#{||:#{mouse_any_flag},#{pane_in_mode}}" "send -M" "copy-mode -e"'
bind -n WheelDownPane              select-pane \; if -t= '#{?alternate_on,true,false} && #{@cmd_pslist} #{pane_tty} | #{@cmd_scrolldetect}' 'send -N3 Down' 'send -M'
bind -T copy-mode-vi WheelUpPane   select-pane \; send -N3 -X scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send -N3 -X scroll-down

#
# Colors and Style
#

# Solarized Dark
%if #{==:#{COLORTERM},truecolor}
set -g @color_base03  '#002b36'
set -g @color_base02  '#073642'
set -g @color_base01  '#586e75'
set -g @color_base00  '#657b83'
set -g @color_base0   '#839496'
set -g @color_base1   '#93a1a1'
set -g @color_base2   '#eee8d5'
set -g @color_base3   '#fdf6e3'
set -g @color_yellow  '#b58900'
set -g @color_orange  '#cb4b16'
set -g @color_red     '#dc322f'
set -g @color_magenta '#d33682'
set -g @color_violet  '#6c71c4'
set -g @color_blue    '#268bd2'
set -g @color_cyan    '#2aa198'
set -g @color_green   '#859900'
%else
set -g @color_base03  brightblack
set -g @color_base02  black
set -g @color_base01  brightgreen
set -g @color_base00  brightyellow
set -g @color_base0   brightblue
set -g @color_base1   brightcyan
set -g @color_base2   white
set -g @color_base3   brightwhite
set -g @color_yellow  yellow
set -g @color_orange  brightred
set -g @color_red     red
set -g @color_magenta magenta
set -g @color_violet  brightmagenta
set -g @color_blue    blue
set -g @color_cyan    cyan
set -g @color_green   green
%endif

# Selection
set -gF mode-style 'reverse'

# Window
set -gF window-style 'bg=#{@color_base03}'
set -gF window-active-style '#{window-style}'

# Pane
set -gF pane-border-style 'fg=#{@color_base01},bg=#{@color_base03}'
set -gF pane-active-border-style '#{pane-border-style}'

# Messages
set -gF message-style 'fg=#{@color_base0},bg=#{@color_base02}'
set -gF message-command-style 'fg=#{@color_base0},bg=#{@color_base02}'

# Status Line
set -gF status-style 'bg=#{@color_base02}'
set -gF status-left-style 'fg=#{@color_base3},bg=#{@color_base01},bold'
set -gF status-right-style 'fg=#{@color_base3},bg=#{@color_base01}'
set -gF window-status-style 'fg=#{@color_base1},bg=default'
set -gF window-status-current-style 'fg=#{@color_base3},bg=#{@color_base00}'
set -gF window-status-last-style '#{window-status-style}'
set -gF window-status-activity-style 'bold'
set -gF window-status-bell-style 'reverse'

# Clock
set -g clock-mode-style 12
set -gF clock-mode-colour '#{@color_base00}'

# Display Panes (Identify)
set -gF display-panes-colour '#{@color_base00}'
set -gF display-panes-active-colour '#{@color_yellow}'
