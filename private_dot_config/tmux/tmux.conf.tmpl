#
# Terminal
#

# $TERM
set -s default-terminal 'tmux-256color'

# Escape Sequences
set -sa terminal-features "xterm*:RGB:extkeys:clipboard" # add features supported by most xterm-compatible terminals
set -s escape-time 25 # pass escape sequences (almost) instantly
set -s focus-events on # pass focus through
set -s set-clipboard on # bubble OSC 52 up
set -s extended-keys on # support xterm-style extended keys (CSI u)

# Windows
set -g base-index 1 # number windows from 1
set -g set-titles on # pass titles to parent terminal
set -g set-titles-string '#{pane_title}' # minimal title string
set -g monitor-activity on # monitor background activity
set -g history-limit 100000 # store 100k lines of history

# Input
set -g mouse on # enable mouse support
set -g mode-keys vi # vi-style copy
set -g status-keys emacs # readline-style command line

# Clipboard
set -s copy-command 'env COPY_PROVIDERS=desktop clipboard-provider copy' # use clipboard-provider for copy-pipe and friends

#
# Status Line
#

set -g status-left-length 40
set -g status-right-length 40
set -g status-left '#{?client_prefix,#[reverse],} #{session_name}#{?session_many_attached,*,} #[#{status-style},noreverse] '
set -g status-right '#[#{status-style}] #{window_index}:#{pane_index} (#{session_id} #{window_id} #{pane_id}) #[#{status-right-style}] %I:%M %p '

set -g window-status-format ' (#{window_index}) #{window_name}#{?window_zoomed_flag,+,} '
set -g window-status-current-format ' [#{window_index}] #{window_name}#{?window_zoomed_flag,+,} '

#
# Keybinds
#

# Pane Process Detection
set -g @cmd_pslist 'ps -o state= -o comm= -t'
set -g @cmd_navdetect 'grep -Eiq "^[^TXZ ]s?\+?\s+(nvim|fzf)$"'

# Reset All
unbind -a
unbind -a -T copy-mode-vi

# Keys
set -g prefix C-q
bind -N 'Send the prefix key' -n C-s send-prefix
bind -N 'List key bindings' ? list-keys -N
bind -N 'Describe key bindings' / command-prompt -k 'list-keys -N -1 -- "%%"'
bind -N 'Display a clock' C-t clock-mode

# Passthrough
bind -N "tmx.fish" -n M-x run -b 'fish -c "tmx"'

# Meta
bind -N 'Prompt for a command' ':' command-prompt
bind -N 'Show messages' '~' show-messages
bind -N 'Reload configuration' \; source "$XDG_CONFIG_HOME/tmux/tmux.conf"

# Session Management
bind -N 'Create a new session' N new-session
bind -N 'Detach the current client' d detach-client
bind -N 'Detach a client from a list' D choose-client -Z 'detach-client -t "%%"'
bind -N 'Kill the current session' C-x confirm -p 'kill-session #{session_name}? (y/n)' kill-session
bind -N 'Suspend the current client' C-z suspend-client
bind -N 'Rename the current session' R command-prompt -I '#{session_name}' 'rename-session -- "%%"'

# Window Management
bind -N 'Create a new window' n new-window -c '#{pane_current_path}'
bind -N 'Kill the current window' X confirm -p 'kill-window #{window_index}? (y/n)' kill-window
bind -N 'Move the current window' m command-prompt 'move-window -t "%%"'
bind -N 'Swap the current window' M command-prompt 'swap-window -d -t "%%"'
bind -N 'Swap the current window backward' -r < swap-window -d -t -1
bind -N 'Swap the current window forward' -r > swap-window -d -t +1
bind -N 'Rename the current window' r command-prompt -I '#{window_name}' 'rename-window -- "%%"'
bind -N 'Renumber all windows' '#' move-window -r
bind -N 'Display pane numbers' i display-panes -d 0
bind -N 'Display current window information' I display-message

# Pane Management
bind -N 'Split window horizontally' s split-window -c '#{pane_current_path}' -v
bind -N 'Split entire window horizontally' S split-window -c '#{pane_current_path}' -vf
bind -N 'Split window vertically' v split-window -c '#{pane_current_path}' -h
bind -N 'Split entire window vertically' V split-window -c '#{pane_current_path}' -hf
bind -N 'Kill the active pane' x confirm -p 'kill-pane #{pane_index}? (y/n)' kill-pane
bind -N 'Respawn the active pane' C-n confirm -p 'respawn-pane #{pane_index}? (y/n)' 'respawn-pane -k'
bind -N 'Mark the active pane' t select-pane -m
bind -N 'Unmark the marked pane' T select-pane -M

# Pane Layout
bind -N 'Select next layout' -r Space next-layout
bind -N 'Apply the even-horizontal layout' M-1 select-layout even-horizontal
bind -N 'Apply the even-vertical layout' M-2 select-layout even-vertical
bind -N 'Apply the main-horizontal layout' M-3 select-layout main-horizontal
bind -N 'Apply the main-vertical layout' M-4 select-layout main-vertical
bind -N 'Apply the tiled layout' M-5 select-layout tiled
bind -N 'Spread panes out evenly' C-e select-layout -E
bind -N 'Rotate panes' -r C-r rotate-window
bind -N 'Rotate panes in reverse' -r M-r rotate-window -D
bind -N 'Swap the active pane with the pane above' -r , swap-pane -U
bind -N 'Swap the active pane with the pane below' -r . swap-pane -D
bind -N 'Swap the active/marked pane' C-m choose-tree -Z 'swap-pane -t "%%"'
bind -N 'Join the active/marked pane vertically' C-s choose-tree -Z 'join-pane -v -t "%%"'
bind -N 'Join the active/marked pane horizontally' C-v choose-tree -Z 'join-pane -h -t "%%"'
bind -N 'Break pane out into a new window' Z break-pane
bind -N 'Zoom the active pane' z resize-pane -Z

# Session Navigation
bind -N 'Switch to previous current session' L switch-client -l
bind -N 'Switch to next session' -r '}' switch-client -n
bind -N 'Switch to previous session' -r '{' switch-client -p
bind -N 'Switch to session from a list' C choose-tree -Zs

# Window Navigation
bind -N 'Select the previous current window' C-q select-window -l
bind -N 'Select the next window' -r ']' select-window -n
bind -N 'Select the previous window' -r '[' select-window -p
bind -N 'Select the next window with an alert' -r "'" next-window -a
bind -N 'Select the previous window with an alert' -r '"' previous-window -a
bind -N 'Select window 1' 1 select-window -t =1
bind -N 'Select window 2' 2 select-window -t =2
bind -N 'Select window 3' 3 select-window -t =3
bind -N 'Select window 4' 4 select-window -t =4
bind -N 'Select window 5' 5 select-window -t =5
bind -N 'Select window 6' 6 select-window -t =6
bind -N 'Select window 7' 7 select-window -t =7
bind -N 'Select window 8' 8 select-window -t =8
bind -N 'Select window 9' 9 select-window -t =9
bind -N 'Select window 10' 0 select-window -t =10
bind -N 'Select a window by index' g command-prompt 'select-window -t "%%"' # FIXME: 3.2: add -W
bind -N 'Select a window from a list' c choose-tree -Zw
bind -N 'Search for a pane' f command-prompt 'find-window -Z -- "%%"'

# Pane Navigation
bind -N 'Select leftward pane' -n C-h if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-h' 'select-pane -L'
bind -N 'Select downward pane' -n C-j if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-j' 'select-pane -D'
bind -N 'Select upward pane' -n C-k if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-k' 'select-pane -U'
bind -N 'Select rightward pane' -n C-l if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-l' 'select-pane -R'
bind -N 'Select last pane' -n C-\\ if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-\\' 'select-pane -l'
bind -N 'Select leftward pane' h select-pane -L
bind -N 'Select downward pane' j select-pane -D
bind -N 'Select upward pane' k select-pane -U
bind -N 'Select rightward pane' l select-pane -R
bind -N 'Send C-h' C-h send C-h
bind -N 'Send C-j' C-j send C-j
bind -N 'Send C-k' C-k send C-k
bind -N 'Send C-l' C-l send C-l
bind -N 'Send C-\' C-\\ send C-\\

# Pane Resizing
bind -N 'Resize pane left' -n C-Left if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-Left' 'resize-pane -L'
bind -N 'Resize pane down' -n C-Down if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-Down' 'resize-pane -D'
bind -N 'Resize pane up' -n C-Up if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-Up' 'resize-pane -U'
bind -N 'Resize pane right' -n C-Right if -b '#{@cmd_pslist} #{pane_tty} | #{@cmd_navdetect}' 'send C-Right' 'resize-pane -R'
bind -N 'Send C-Down' C-Down send C-Down
bind -N 'Send C-Left' C-Left send C-Left
bind -N 'Send C-Up' C-Up send C-Up
bind -N 'Send C-Right' C-Right send C-Right

# Clipboard/Buffer Management
bind -N 'List all paste buffers' '=' list-buffers
bind -N 'Delete the most recent paste buffer' '-' delete-buffer
bind -N 'Paste the most recent paste buffer' p paste-buffer -rp
bind -N 'Choose a paste buffer to paste' P choose-buffer -Z 'paste-buffer -rp -b "%%"'
bind -N 'Load a paste buffer from the clipboard' M-p run 'env PASTE_PROVIDERS=desktop clipboard-provider paste | tmux load-buffer -'
bind -N 'Save the most recent paste bufer to the clipboard' y run 'tmux save-buffer - | #{copy-command}'
bind -N 'Choose a paste buffer to save to the clipboard' Y choose-buffer -Z 'save-buffer -b "%%" - | #{copy-command}'

# URL Selection
bind -N 'Open URLs from pane' C-o run -b 'tmuxrl -t #{pane_id} -o'
bind -N 'Open URLs from pane history' M-o run -b 'tmuxrl -t #{pane_id} -o -f'
bind -N 'Yank URLs from pane' C-y run -b 'tmuxrl -t #{pane_id} -y'
bind -N 'Yank URLs from pane history' M-y run -b 'tmuxrl -t #{pane_id} -y -f'

# Copy Mode
bind -N 'Enter copy mode' Escape copy-mode
bind -N 'Enter copy mode and scroll up' PgUp copy-mode -eu

# Left Click
bind -n MouseDown1Status select-window -t=
bind -n MouseDrag1Border resize-pane -M
bind -n MouseDown1Pane select-pane \; send -M
bind -n MouseDrag1Pane select-pane \; if -F '#{||:#{mouse_any_flag},#{pane_in_mode}}' 'send -M' 'copy-mode -M'
bind -n DoubleClick1Pane select-pane \; if -F '#{||:#{mouse_any_flag},#{pane_in_mode}}' 'send -M' 'copy-mode; send -X select-word'
bind -n TripleClick1Pane select-pane \; if -F '#{||:#{mouse_any_flag},#{pane_in_mode}}' 'send -M' 'copy-mode; send -X select-line'

# Scroll Wheel
bind -n WheelUpStatus select-window -p
bind -n WheelDownStatus select-window -n
bind -n WheelUpPane select-pane \; if -F '#{||:#{mouse_any_flag},#{pane_in_mode}}' 'send -M' 'copy-mode -e'

# Copy Mode
bind -T copy-mode-vi q send -X cancel
bind -T copy-mode-vi C-c send -X cancel

# Copy Mode (Cursor)
bind -T copy-mode-vi H send -X top-line
bind -T copy-mode-vi L send -X bottom-line
bind -T copy-mode-vi M send -X middle-line
bind -T copy-mode-vi C-h send -X cursor-left
bind -T copy-mode-vi BSpace send -X cursor-left
bind -T copy-mode-vi h send -X cursor-left
bind -T copy-mode-vi j send -X cursor-down
bind -T copy-mode-vi k send -X cursor-up
bind -T copy-mode-vi l send -X cursor-right
bind -T copy-mode-vi Up send -X cursor-up
bind -T copy-mode-vi Down send -X cursor-down
bind -T copy-mode-vi Left send -X cursor-left
bind -T copy-mode-vi Right send -X cursor-right

# Copy Mode (Scroll)
bind -T copy-mode-vi C-f send -X page-down
bind -T copy-mode-vi C-b send -X page-up
bind -T copy-mode-vi PgDn send -X page-down
bind -T copy-mode-vi PgUp send -X page-up
bind -T copy-mode-vi C-d send -X halfpage-down
bind -T copy-mode-vi C-u send -X halfpage-up
bind -T copy-mode-vi C-e send -X scroll-down
bind -T copy-mode-vi C-y send -X scroll-up
bind -T copy-mode-vi J send -X scroll-down
bind -T copy-mode-vi K send -X scroll-up
bind -T copy-mode-vi C-Down send -X scroll-down
bind -T copy-mode-vi C-Up send -X scroll-up
bind -T copy-mode-vi g send -X history-top
bind -T copy-mode-vi G send -X history-bottom

# Copy Mode (Selection)
bind -T copy-mode-vi Escape send -X clear-selection
bind -T copy-mode-vi Space send -X begin-selection
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi C-j send -X copy-selection-and-cancel
bind -T copy-mode-vi Enter send -X copy-selection-and-cancel
bind -T copy-mode-vi y send -X copy-selection-no-clear
bind -T copy-mode-vi Y send -X copy-pipe-no-clear
bind -T copy-mode-vi A send -X append-selection-and-cancel
bind -T copy-mode-vi D send -X copy-end-of-line
bind -T copy-mode-vi p send -X copy-selection-and-cancel \; paste-buffer -rp
bind -T copy-mode-vi P send -X copy-selection \; paste-buffer -rp

# Copy Mode (Search/Jump)
bind -T copy-mode-vi / command-prompt -p '(search down)' 'send -X search-forward "%%"'
bind -T copy-mode-vi ? command-prompt -p '(search up)' 'send -X search-backward "%%"'
bind -T copy-mode-vi f command-prompt -1 -p '(jump forward)' 'send -X jump-forward "%%"'
bind -T copy-mode-vi F command-prompt -1 -p '(jump backward)' 'send -X jump-backward "%%"'
bind -T copy-mode-vi t command-prompt -1 -p '(jump to forward)' 'send -X jump-to-forward "%%"'
bind -T copy-mode-vi T command-prompt -1 -p '(jump to backward)' 'send -X jump-to-backward "%%"'
bind -T copy-mode-vi '*' send -XF search-forward '#{copy_cursor_word}'
bind -T copy-mode-vi '#' send -XF search-backward '#{copy_cursor_word}'
bind -T copy-mode-vi '%' send -X next-matching-bracket
bind -T copy-mode-vi ':' command-prompt -p '(goto line)' 'send -X goto-line "%%"'

# Copy Mode (Repeat)
bind -T copy-mode-vi n send -X search-again
bind -T copy-mode-vi N send -X search-reverse
bind -T copy-mode-vi \; send -X jump-again
bind -T copy-mode-vi , send -X jump-reverse
bind -T copy-mode-vi 1 command-prompt -N -p '(repeat)' -I1 'send -N "%%"'
bind -T copy-mode-vi 2 command-prompt -N -p '(repeat)' -I2 'send -N "%%"'
bind -T copy-mode-vi 3 command-prompt -N -p '(repeat)' -I3 'send -N "%%"'
bind -T copy-mode-vi 4 command-prompt -N -p '(repeat)' -I4 'send -N "%%"'
bind -T copy-mode-vi 5 command-prompt -N -p '(repeat)' -I5 'send -N "%%"'
bind -T copy-mode-vi 6 command-prompt -N -p '(repeat)' -I6 'send -N "%%"'
bind -T copy-mode-vi 7 command-prompt -N -p '(repeat)' -I7 'send -N "%%"'
bind -T copy-mode-vi 8 command-prompt -N -p '(repeat)' -I8 'send -N "%%"'
bind -T copy-mode-vi 9 command-prompt -N -p '(repeat)' -I9 'send -N "%%"'

# Copy Mode (Motions)
bind -T copy-mode-vi 0 send -X start-of-line
bind -T copy-mode-vi '$' send -X end-of-line
bind -T copy-mode-vi ^ send -X back-to-indentation
bind -T copy-mode-vi b send -X previous-word
bind -T copy-mode-vi B send -X previous-space
bind -T copy-mode-vi w send -X next-word
bind -T copy-mode-vi W send -X next-space
bind -T copy-mode-vi e send -X next-word-end
bind -T copy-mode-vi E send -X next-space-end
bind -T copy-mode-vi o send -X other-end
bind -T copy-mode-vi '{' send -X previous-paragraph
bind -T copy-mode-vi '}' send -X next-paragraph

# Copy Mode (Mouse)
bind -T copy-mode-vi MouseDown1Pane select-pane
bind -T copy-mode-vi MouseDrag1Pane select-pane \; send -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel
bind -T copy-mode-vi WheelUpPane select-pane \; send -N5 -X scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send -N5 -X scroll-down
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line

#
# Colors and Style
#

# Selection
set -gF mode-style 'reverse'

# Window
set -gF window-style 'bg=default'
set -gF window-active-style '#{window-style}'

# Pane
set -gF pane-border-style 'fg={{ .nord.nord3 }},bg=default'
set -gF pane-active-border-style '#{pane-border-style}'

# Messages
set -gF message-style 'fg={{ .nord.nord0 }},bg={{ .nord.nord6 }}'
set -gF message-command-style 'fg={{ .nord.nord0 }},bg={{ .nord.nord6 }}'

# Status Line
set -gF status-style 'fg={{ .nord.nord4 }},bg={{ .nord.nord1 }}'
set -gF status-left-style 'fg={{ .nord.nord6 }},bg={{ .nord.nord2 }}'
set -gF status-right-style 'fg={{ .nord.nord6 }},bg={{ .nord.nord2 }}'
set -gF window-status-style 'fg=default,bg=default'
set -gF window-status-current-style 'fg={{ .nord.nord6 }},bg={{ .nord.nord3 }}'
set -gF window-status-last-style '#{window-status-style}'
set -gF window-status-activity-style 'bold'
set -gF window-status-bell-style 'reverse'

# Clock
set -g clock-mode-style 12
set -gF clock-mode-colour '{{ .nord.nord8 }}'

# Display Panes (Identify)
set -gF display-panes-colour '{{ .nord.nord4 }}'
set -gF display-panes-active-colour '{{ .nord.nord5 }}'

# vi: ft=tmux
