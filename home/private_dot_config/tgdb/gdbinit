python
import os
HOME = os.path.expanduser("~")
XDG_DATA_HOME = os.environ['XDG_DATA_HOME'] \
                    if os.environ['XDG_DATA_HOME'] \
                    else os.path.join(HOME, ".local", "share")

# load history file
gdb.execute(f"set history filename {XDG_DATA_HOME}/gdb/history")
# load dashboard
gdb.execute(f"source {XDG_DATA_HOME}/gdb-dashboard/.gdbinit")
end

# tweak module order
dashboard -layout source assembly breakpoints registers memory threads stack variables expressions history

# make variables readable
dashboard variables -style align True
dashboard variables -style compact False
dashboard variables -style sort True

# align expressions
dashboard expressions -style align True

# sort the stack
dashboard stack -style sort True

# show registers by column
dashboard registers -style column-major True

# use full height
dashboard assembly -style height 0
dashboard source -style height 0

# use shell-builtin syntax highlighting
dashboard -style syntax_highlighting 'native'

# commands to toggle inline/expanded display of values
define expand
  dashboard -style compact_values False
end
define compact
  dashboard -style compact_values True
end
# ...and default to expanded values
expand

# turn off confirmation
set confirm off

# allow pending breakpoints
set breakpoint pending on

# use intel disassembly
set disassembly-flavor intel

# make sure we're pretty printing
set print pretty on

# add hooks to refresh the dashboard more often
define hookpost-up
  dashboard
end
define hookpost-down
  dashboard
end
define hookpost-frame
  dashboard
end
define hookpost-print
  dashboard
end
