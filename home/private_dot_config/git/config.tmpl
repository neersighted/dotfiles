#
# User Details
#

[user]
	name = Bjorn Neergaard
	email = bjorn@neersighted.com

[credential]
	helper =

{{-  $gcm := lookPath "git-credential-manager" -}}
{{- if $gcm }}
	helper = {{ $gcm }}
{{- else if .wsl.any }}
	helper = /mnt/c/Program Files/Git/mingw64/bin/git-credential-manager-core.exe
{{- else if eq .chezmoi.os "darwin" }}
	helper = osxkeychain
{{- else }}
	helper = store
{{- end }}
{{- $gh := lookPath "gh" -}}
{{- if $gh }}
{{-   range (list "https://github.com" "https://gist.github.com")}}
[credential {{ quote . }}]
	helper = {{/* gh auth setup-git adds a trailing space here */}}
	helper = !{{ $gh }} auth git-credential
{{-   end }}
{{- end }}
[credential "https://dev.azure.com"]
	useHttpPath = true

#
# General Config
#

[core]
{{- if eq .chezmoi.os "windows" }}
{{-   if lookPath "subl" }}
	editor = subl --wait
{{-   else if lookPath "code" }}
	editor = code --wait
{{-   end }}
{{- else }}
	editor = git-editor
{{- end }}
{{- if lookPath "delta" }}
	pager = delta
{{- end }}
	fsmonitor = true
{{- if eq .chezmoi.os "windows" }}
	autocrlf = false
	fscache = true
	symlinks = true
	longpaths = true
	sshCommand = "C:/Windows/System32/OpenSSH/ssh.exe"
[http]
	sslBackend = schannel
{{- end }}
{{- if eq .chezmoi.os "windows" }}
[safe]
	directory = *
{{- end }}

[pull]
	ff = true
	rebase = true
[push]
	default = current
	gpgSign = if-asked

[init]
	defaultBranch = main
[commit]
	verbose = true
[tag]
	gpgSign = true

[diff]
	algorithm = patience
	colorMoved = default
	mnemonicPrefix = true
[merge]
	ff = only
{{- if eq .chezmoi.os "windows" }}
	tool = smerge
{{- else }}
	tool = nvimdiff2
	guitool = smerge
{{- end }}
[rebase]
	autoSquash = true
	autoStash = true
	stat = true
	updateRefs = true
[rerere]
	enabled = true

[gpg]
	format = ssh
{{- if ne .chezmoi.os "windows" }}
[gpg.ssh]
	defaultKeyCommand = {{ .chezmoi.homeDir }}/.config/git/keycommand.sh
{{- end }}

[interactive]
{{- if lookPath "delta" }}
	diffFilter = delta --color-only
{{- end }}
	singleKey = true
{{- if lookPath "interactive-rebase-tool" }}
[sequence]
	editor = interactive-rebase-tool
{{- end }}

[status]
	short = true
	branch = true
	showStash = true
	submoduleSummary = true
[log]
	abbrevCommit = true
[blame]
	coloring = highlightRecent

[format]
	pretty = onelineplus
[pretty]
	onelineplus = format:%C(yellow)%h%C(auto)%d%C(reset) %s %C(blue)(%cr)%C(reset) %C(green)<%aN>
	columns = format:%C(yellow)%h%C(magenta)% G? %C(blue)%<(12,trunc)%ar %C(green)%<(16,trunc)%aN %C(reset)%s%C(auto)%d
	github = format:- %s

#
# Tools
#

[alias]
	fixup = "!f() { SHA=$(git fzf-commit \"$1\"); git commit --no-gpg-sign --fixup=amend:\"${SHA}\"; git rebase-auto \"${SHA}~\"; }; f"
	fzf-commit = "!f() { git log --no-merges --color=always | fzf --tiebreak=index --query \"$1\" | cut -d' ' -f1; }; f"
	pr-log = log --reverse --format=github refs/remotes/origin/HEAD..HEAD
	prune = fetch --prune
	rebase-auto = -c sequence.editor=touch rebase --interactive --autosquash --autostash
	reset-perms = !git diff -p -R | grep -E '^(diff|(old|new) mode)' | git apply
	showf = show --pretty=fuller
	stash-all = stash save --include-untracked

{{- if lookPath "delta" }}
[delta]
	line-numbers = true
	navigate = true
{{- end}}

[mergetool]
	keepBackup = false
{{- if and .wsl.any (lookPath "smerge.exe") }}
[mergetool "smerge"]
	cmd = smerge.exe mergetool "$BASE" "$LOCAL" "$REMOTE" -o "$MERGED"
	trustExitCode = true
{{- end}}

{{- if lookPath "git-lfs" }}
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
{{- end }}

#
# Colors
#

[color "blame"]
	highlightRecent = "blue,12 month ago,green,6 month ago,yellow,1 month ago,red"
	repeatedLines = "blue"
[color "diff"]
	context = "normal"
	meta = "blue"
	frag = "magenta"
	func = "black"
	commit = "yellow"
	old = "red"
	new = "green"
	whitespace = "yellow reverse"
[color "diff-highlight"]
	oldNormal = "red"
	oldHighlight = "red reverse"
	newNormal = "green"
	newHighlight = "green reverse"

#
# URL Aliases
#

[url "aur@aur.archlinux.org:"]
	insteadOf = aur:

#
# Conditional Config
#

[includeIf "gitdir:Docker/"]
	path = ./config.docker

# vi: ft=gitconfig.chezmoitmpl
